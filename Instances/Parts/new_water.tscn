[gd_scene load_steps=7 format=3 uid="uid://donf7pbm3re8o"]

[ext_resource type="Texture2D" uid="uid://0u7skxqiwcqm" path="res://icon.png" id="1_01bhd"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_8sppy"]
resource_local_to_scene = true
size = Vector2(240, 120)

[sub_resource type="Shader" id="Shader_6x2pr"]
code = "shader_type canvas_item;

uniform sampler2D refraction_map;

uniform vec2 refraction_stretch = vec2(1.0, 1.0);
uniform float refraction_strength : hint_range(0.0, 0.1) = 0.02;

uniform vec4 water_tint : source_color = vec4(0.2, 0.6, 1.0, 0.1);
uniform float speed : hint_range(0.0, 1.0) = 0.1;

uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_nearest_mipmap;

varying vec2 globalposition;
void vertex(){
	globalposition = (MODEL_MATRIX * vec4(VERTEX, 0.0, 1.0)).xy;
}


void fragment()
{
	vec2 uv = globalposition / 512.0;
	
	vec2 refraction_offset = texture(
		refraction_map, 
		vec2(
			mod(uv.x * refraction_stretch.x + TIME * speed, 1.0), 
			mod(uv.y * refraction_stretch.y + TIME * speed, 1.0))).xy;
	// Set values between -0.5 and 0.5 (instead of 0 and 1). Otherwise the reflection will move whith increased refraction_strength
	refraction_offset -= 0.5; 
	
	// Get the screen texture and distort it
	vec4 refraction = texture(SCREEN_TEXTURE, SCREEN_UV - refraction_offset * refraction_strength);
	
	vec4 color = vec4(1.0);
	
	color.rgb = mix(refraction.rgb, water_tint.rgb, water_tint.a);
	COLOR = color;
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_icix2"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_efsfc"]
seamless = true
noise = SubResource("FastNoiseLite_icix2")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5qk8x"]
shader = SubResource("Shader_6x2pr")
shader_parameter/refraction_stretch = Vector2(1, 1)
shader_parameter/refraction_strength = 0.02
shader_parameter/water_tint = Color(0.2, 0.580392, 1, 0.439216)
shader_parameter/speed = 0.1
shader_parameter/refraction_map = SubResource("NoiseTexture2D_efsfc")

[node name="NewWater" type="CollisionShape2D"]
position = Vector2(112, 52)
shape = SubResource("RectangleShape2D_8sppy")
debug_color = Color(0, 0.6, 0.701961, 0)

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_01bhd")

[node name="Refraction" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_5qk8x")
offset_left = -120.0
offset_top = -60.0
offset_right = 120.0
offset_bottom = 60.0
