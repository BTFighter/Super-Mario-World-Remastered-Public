[gd_scene load_steps=6 format=3 uid="uid://dwqrc0rstr7ll"]

[ext_resource type="PackedScene" uid="uid://d3l2vyw007126" path="res://Instances/Levels/ghost_house_exit.tscn" id="1_xiv3o"]
[ext_resource type="Resource" uid="uid://bwcd5nhine8u6" path="res://Resources/Achievements/Completionist/Moons/IFMoon.tres" id="3_71xso"]
[ext_resource type="PackedScene" uid="uid://bt8t7swg888jt" path="res://Instances/Prefabs/Items/3_up_moon.tscn" id="8_pfl2k"]

[sub_resource type="Shader" id="Shader_1xk88"]
code = "// HSV to RBG from https://www.rapidtables.com/convert/color/hsv-to-rgb.html
// Rotation matrix from https://en.wikipedia.org/wiki/Rotation_matrix

shader_type canvas_item;


uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, vec4(rainbow, color.a), strength);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_rnri7"]
resource_local_to_scene = true
shader = SubResource("Shader_1xk88")
shader_parameter/strength = 0.0
shader_parameter/speed = 0.5
shader_parameter/angle = 36.404

[node name="GhostHouseExit" instance=ExtResource("1_xiv3o")]

[node name="Player" parent="." index="0"]
material = SubResource("ShaderMaterial_rnri7")

[node name="Sign" parent="." index="8"]
visible = false

[node name="3UpMoon" parent="." index="9" instance=ExtResource("8_pfl2k")]
position = Vector2(72, -8)
collect_achievement = ExtResource("3_71xso")
