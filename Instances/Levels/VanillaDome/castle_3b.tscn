[gd_scene load_steps=13 format=3 uid="uid://cywpg0jsgbipw"]

[ext_resource type="Script" uid="uid://k72dmo2yqq6n" path="res://Scripts/Classes/LevelClass.gd" id="1_covkb"]
[ext_resource type="AudioStream" uid="uid://tmquifk0xxio" path="res://Resources/MusicTracks/Fortress.tres" id="2_c3rhw"]
[ext_resource type="PackedScene" uid="uid://cqw1qs0bt5s4o" path="res://Instances/Prefabs/Player.tscn" id="4_8nfw0"]
[ext_resource type="PackedScene" uid="uid://dwavjbyw0v12l" path="res://Instances/Prefabs/tile_map.tscn" id="5_jwpho"]
[ext_resource type="PackedScene" uid="uid://cai8wb5qay3j8" path="res://Instances/Prefabs/checkpoint_gate.tscn" id="6_fltpq"]
[ext_resource type="PackedScene" uid="uid://dm7exbyvtd2fw" path="res://Instances/Prefabs/Blocks/spin_block.tscn" id="7_n5u8n"]
[ext_resource type="PackedScene" uid="uid://bimrxpg5a4yrk" path="res://Instances/Prefabs/Items/1_up.tscn" id="8_2y3q6"]
[ext_resource type="PackedScene" uid="uid://d3ay6d00er3ko" path="res://Instances/Prefabs/Interactables/door.tscn" id="8_psrhb"]
[ext_resource type="PackedScene" uid="uid://c1xol3wby2j0k" path="res://Instances/Prefabs/level_bg.tscn" id="9_rc1el"]
[ext_resource type="Texture2D" uid="uid://b75ber1qhksa7" path="res://Assets/Sprites/Backgrounds/Castle/Fortress1.png" id="11_et6eq"]

[sub_resource type="Shader" id="Shader_1xk88"]
code = "// HSV to RBG from https://www.rapidtables.com/convert/color/hsv-to-rgb.html
// Rotation matrix from https://en.wikipedia.org/wiki/Rotation_matrix

shader_type canvas_item;


uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, vec4(rainbow, color.a), strength);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_37jho"]
resource_local_to_scene = true
shader = SubResource("Shader_1xk88")
shader_parameter/strength = 0.0
shader_parameter/speed = 0.5
shader_parameter/angle = 36.404

[node name="Castle3B" type="Node"]
script = ExtResource("1_covkb")
level_music = ExtResource("2_c3rhw")
camera_left_end_position = 448

[node name="Level1f4" type="Sprite2D" parent="."]
modulate = Color(0.372549, 0.372549, 0.372549, 1)
z_index = -10
position = Vector2(-64, -384)
centered = false

[node name="Player" parent="." instance=ExtResource("4_8nfw0")]
material = SubResource("ShaderMaterial_37jho")
position = Vector2(-40, 0)

[node name="TileMap" parent="." instance=ExtResource("5_jwpho")]
layer_0/tile_data = PackedInt32Array(65531, 196621, 0, 65532, 262157, 0, 65533, 262157, 0, 65534, 262157, 0, 65535, 262157, 0, 0, 262157, 0, 1, 262157, 0, 2, 262157, 0, 3, 262157, 0, 4, 262157, 0, 5, 262157, 0, 6, 262157, 0, 7, 262157, 0, 8, 262157, 0, 9, 262157, 0, 10, 262157, 0, 11, 262157, 0, 12, 262157, 0, 13, 262157, 0, 14, 262157, 0, 15, 262157, 0, 16, 262157, 0, 17, 262157, 0, 18, 262157, 0, 19, 262157, 0, 20, 262157, 0, 21, 262157, 0, 22, 262157, 0, 23, 262157, 0, 24, 262157, 0, 25, 262157, 0, 26, 262157, 0, 27, 262157, 0, 28, 327693, 0, 131067, 196621, 1, 131068, 262157, 1, 131069, 262157, 1, 131070, 262157, 1, 131071, 262157, 1, 65536, 262157, 1, 65537, 262157, 1, 65538, 262157, 1, 65539, 262157, 1, 65540, 262157, 1, 65541, 262157, 1, 65542, 262157, 1, 65543, 262157, 1, 65544, 262157, 1, 65545, 262157, 1, 65546, 262157, 1, 65547, 262157, 1, 65548, 262157, 1, 65549, 262157, 1, 65550, 262157, 1, 65551, 262157, 1, 65552, 262157, 1, 65553, 262157, 1, 65554, 262157, 1, 65555, 262157, 1, 65556, 262157, 1, 65557, 262157, 1, 65558, 262157, 1, 65559, 262157, 1, 65560, 262157, 1, 65561, 262157, 1, 65562, 262157, 1, 65563, 262157, 1, 65564, 327693, 1, 196603, 196621, 1, 196604, 262157, 1, 196605, 262157, 1, 196606, 262157, 1, 196607, 262157, 1, 131072, 262157, 1, 131073, 262157, 1, 131074, 262157, 1, 131075, 262157, 1, 131076, 262157, 1, 131077, 262157, 1, 131078, 262157, 1, 131079, 262157, 1, 131080, 262157, 1, 131081, 262157, 1, 131082, 262157, 1, 131083, 262157, 1, 131084, 262157, 1, 131085, 262157, 1, 131086, 262157, 1, 131087, 262157, 1, 131088, 262157, 1, 131089, 262157, 1, 131090, 262157, 1, 131091, 262157, 1, 131092, 262157, 1, 131093, 262157, 1, 131094, 262157, 1, 131095, 262157, 1, 131096, 262157, 1, 131097, 262157, 1, 131098, 262157, 1, 131099, 262157, 1, 131100, 327693, 1, 262139, 196621, 536870912, 262140, 262157, 536870912, 262141, 262157, 536870912, 262142, 262157, 536870912, 262143, 262157, 536870912, 196608, 262157, 536870912, 196609, 262157, 536870912, 196610, 262157, 536870912, 196611, 262157, 536870912, 196612, 262157, 536870912, 196613, 262157, 536870912, 196614, 262157, 536870912, 196615, 262157, 536870912, 196616, 262157, 536870912, 196617, 262157, 536870912, 196618, 262157, 536870912, 196619, 262157, 536870912, 196620, 262157, 536870912, 196621, 262157, 536870912, 196622, 262157, 536870912, 196623, 262157, 536870912, 196624, 262157, 536870912, 196625, 262157, 536870912, 196626, 262157, 536870912, 196627, 262157, 536870912, 196628, 262157, 536870912, 196629, 262157, 536870912, 196630, 262157, 536870912, 196631, 262157, 536870912, 196632, 262157, 536870912, 196633, 262157, 536870912, 196634, 262157, 536870912, 196635, 262157, 536870912, 196636, 327693, 536870912, -327654, 13, 0, -327653, 131085, 0, -262118, 13, 1, -262117, 131085, 1, -196582, 13, 1, -196581, 131085, 1, -131046, 13, 1, -131045, 131085, 1, -65510, 13, 2, -65509, 131085, 2, -458756, 13, 0, -458755, 65549, 0, -458754, 131085, 0, -393220, 13, 1, -393219, 65549, 1, -393218, 131085, 1, -327684, 13, 1, -327683, 65549, 1, -327682, 131085, 1, -262148, 13, 1, -262147, 65549, 1, -262146, 131085, 1, -196612, 13, 2, -196611, 65549, 2, -196610, 131085, 2, -851972, 13, 0, -851971, 65549, 0, -851970, 131085, 0, -786436, 13, 1, -786435, 65549, 1, -786434, 131085, 1, -720900, 13, 1, -720899, 65549, 1, -720898, 131085, 1, -655364, 13, 2, -655363, 65549, 2, -655362, 131085, 2, -917500, 13, 0, -917499, 65549, 0, -917498, 131085, 0, -851964, 13, 1, -851963, 65549, 1, -851962, 131085, 1, -786428, 13, 1, -786427, 65549, 1, -786426, 131085, 1, -720892, 13, 2, -720891, 65549, 2, -720890, 131085, 2, -655350, 13, 0, -655349, 65549, 0, -655348, 65549, 0, -655347, 65549, 0, -655346, 131085, 0, -589814, 13, 2, -589813, 65549, 2, -589812, 65549, 2, -589811, 65549, 2, -589810, 131085, 2, -917487, 13, 0, -917486, 65549, 0, -917485, 65549, 0, -917484, 65549, 0, -917483, 131085, 0, -851951, 13, 1, -851950, 65549, 1, -851949, 65549, 1, -851948, 65549, 1, -851947, 131085, 1, -786415, 13, 2, -786414, 65549, 2, -786413, 65549, 2, -786412, 65549, 2, -786411, 131085, 2, -655336, 13, 0, -655335, 131085, 0, -589800, 13, 2, -589799, 131085, 2)
layer_1/tile_data = PackedInt32Array(-589828, 13, 0, -589827, 65549, 0, -589826, 65549, 0, -589825, 65549, 0, -655360, 65549, 0, -655359, 131085, 0, -524292, 13, 2, -524291, 65549, 2, -524290, 65549, 2, -524289, 65549, 2, -589824, 65549, 2, -589823, 131085, 2, -917497, 13, 0, -917496, 65549, 0, -917495, 131085, 0, -851961, 13, 1, -851960, 65549, 1, -851959, 131085, 1, -786425, 13, 1, -786424, 65549, 1, -786423, 131085, 1, -720889, 13, 1, -720888, 65549, 1, -720887, 131085, 1, -655353, 13, 1, -655352, 65549, 1, -655351, 131085, 1, -589817, 13, 2, -589816, 65549, 2, -589815, 131085, 2, -524278, 13, 0, -524277, 65549, 0, -524276, 131085, 0, -458742, 13, 1, -458741, 65549, 1, -458740, 131085, 1, -393206, 13, 1, -393205, 65549, 1, -393204, 131085, 1, -327670, 13, 1, -327669, 65549, 1, -327668, 131085, 1, -262134, 13, 2, -262133, 65549, 2, -262132, 131085, 2, -917491, 13, 0, -917490, 65549, 0, -917489, 65549, 0, -917488, 131085, 0, -851955, 13, 1, -851954, 65549, 1, -851953, 65549, 1, -851952, 131085, 1, -786419, 13, 1, -786418, 65549, 1, -786417, 65549, 1, -786416, 131085, 1, -720883, 13, 2, -720882, 65549, 2, -720881, 65549, 2, -720880, 131085, 2, -917482, 13, 0, -917481, 65549, 0, -917480, 65549, 0, -917479, 65549, 0, -917478, 65549, 0, -917477, 131085, 0, -851946, 13, 1, -851945, 65549, 1, -851944, 65549, 1, -851943, 65549, 1, -851942, 65549, 1, -851941, 131085, 1, -786410, 13, 1, -786409, 65549, 1, -786408, 65549, 1, -786407, 65549, 1, -786406, 65549, 1, -786405, 131085, 1, -720874, 13, 2, -720873, 65549, 2, -720872, 65549, 2, -720871, 65549, 2, -720870, 65549, 2, -720869, 131085, 2)
layer_2/tile_data = PackedInt32Array(-655334, 13, 0, -655333, 131085, 0, -589798, 13, 1, -589797, 131085, 1, -524262, 13, 1, -524261, 131085, 1, -458726, 13, 1, -458725, 131085, 1, -393190, 13, 2, -393189, 131085, 2, -917494, 13, 0, -917493, 65549, 0, -917492, 131085, 0, -851958, 13, 1, -851957, 65549, 1, -851956, 131085, 1, -786422, 13, 1, -786421, 65549, 1, -786420, 131085, 1, -720886, 13, 2, -720885, 65549, 2, -720884, 131085, 2)
layer_4/tile_data = PackedInt32Array(-851969, 13, 0, -917504, 65549, 0, -917503, 65549, 0, -917502, 65549, 0, -917501, 131085, 0, -786433, 13, 1, -851968, 65549, 1, -851967, 65549, 1, -851966, 65549, 1, -851965, 131085, 1, -720897, 13, 1, -786432, 65549, 1, -786431, 65549, 1, -786430, 65549, 1, -786429, 131085, 1, -655361, 13, 2, -720896, 65549, 2, -720895, 65549, 2, -720894, 65549, 2, -720893, 131085, 2)

[node name="CheckpointGate" parent="." instance=ExtResource("6_fltpq")]
position = Vector2(84, -4)

[node name="SpinBlock" parent="." instance=ExtResource("7_n5u8n")]
position = Vector2(312, -56)
item = ExtResource("8_2y3q6")

[node name="Door" parent="." instance=ExtResource("8_psrhb")]
position = Vector2(392, 0)
level_scene = "res://Instances/Levels/VanillaDome/castle_3c.tscn"
spawn_position = Vector2(-40, -80)

[node name="StaticBG" parent="." instance=ExtResource("9_rc1el")]
main_texture = ExtResource("11_et6eq")
sky_colour = Color(0, 0, 0, 1)
