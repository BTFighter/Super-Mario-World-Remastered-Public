[gd_scene load_steps=13 format=3 uid="uid://dnl5q4ynco43o"]

[ext_resource type="PackedScene" uid="uid://cfqnik1ark44y" path="res://Instances/Levels/SMBW1/1_2b.tscn" id="1_kgs0v"]
[ext_resource type="Texture2D" uid="uid://24rlkrcpig8a" path="res://Assets/Sprites/Backgrounds/Overworld/NightSky1.png" id="2_pug0l"]
[ext_resource type="AudioStream" uid="uid://bju11ltkndcbs" path="res://Assets/Audio/BGM/SMB1/LevelComplete.mp3" id="2_qxra2"]

[sub_resource type="Shader" id="Shader_1xk88"]
code = "// HSV to RBG from https://www.rapidtables.com/convert/color/hsv-to-rgb.html
// Rotation matrix from https://en.wikipedia.org/wiki/Rotation_matrix

shader_type canvas_item;


uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, vec4(rainbow, color.a), strength);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_06j6i"]
resource_local_to_scene = true
shader = SubResource("Shader_1xk88")
shader_parameter/strength = 0.0
shader_parameter/speed = 0.5
shader_parameter/angle = 36.404

[sub_resource type="AtlasTexture" id="AtlasTexture_jl3hh"]
atlas = ExtResource("2_pug0l")
region = Rect2(0, 0, 512, 432)

[sub_resource type="AtlasTexture" id="AtlasTexture_k8w8r"]
atlas = ExtResource("2_pug0l")
region = Rect2(513, 0, 512, 432)

[sub_resource type="AtlasTexture" id="AtlasTexture_k0cly"]
atlas = ExtResource("2_pug0l")
region = Rect2(1026, 0, 512, 432)

[sub_resource type="AtlasTexture" id="AtlasTexture_42v6q"]
atlas = ExtResource("2_pug0l")
region = Rect2(1539, 0, 512, 432)

[sub_resource type="SpriteFrames" id="SpriteFrames_6vu68"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_jl3hh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_k8w8r")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_k0cly")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_42v6q")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="Gradient" id="Gradient_tumms"]
interpolation_mode = 2
colors = PackedColorArray(0, 0, 0.0705882, 1, 5.17406e-07, 0, 0.332346, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_e7trt"]
gradient = SubResource("Gradient_tumms")
width = 1
height = 256
fill_from = Vector2(0, 1)
fill_to = Vector2(0, 0)

[node name="1-2b" instance=ExtResource("1_kgs0v")]
custom_victory_theme = ExtResource("2_qxra2")

[node name="Player" parent="." index="0"]
material = SubResource("ShaderMaterial_06j6i")

[node name="LevelBG" parent="." index="1"]
main_texture = null
main_sprite_frames = SubResource("SpriteFrames_6vu68")
sky_texture = SubResource("GradientTexture2D_e7trt")

[node name="EndFlagPole" parent="." index="3"]
secret = true
